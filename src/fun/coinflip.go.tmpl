{{/*
	Coin-flip game that integrates with an existing currency system.
	See <https://yagpdb-cc.github.io/fun/coinflip> for more information.

	Author: DaviiD1337 <https://github.com/DaviiD1337>
	Co-Author: H1nr1 <https://github.com/H1nr1>
*/}}

{{/* Configuration variables start */}}
{{ $CHANNEL := .Channel.ID }}
{{ $MIN_BET := 100 }}
{{ $MAX_BET := 500 }}
{{ $DB_KEY := "CREDITS" }}
{{ $COOLDOWN := 5 }}
{{/* Configuration variables end */}}

{{ $err := false }}
{{ $img := "https://cdn.discordapp.com/attachments/707661790443733022/782710794634264616/d74906d39a1964e7d07555e7601b06ad.gif" }}
{{ $heads := "https://cdn.discordapp.com/attachments/707661790443733022/782713935341027358/cap.png" }}
{{ $tails := "https://cdn.discordapp.com/attachments/707661790443733022/782713937979637760/pajura.png" }}
{{ $embed := sdict "author" (sdict "name" .User.Username "icon_url" (.User.AvatarURL "256")) }}

{{ if not .ExecData }}
	{{ if not (eq (len .CmdArgs) 2) }}
		{{ $embed.Set "description" (printf "Syntax: **%scoinflip <heads/tails> <money>**" .ServerPrefix) }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ $choice := reFind `\A(?i)(heads|tails)\z` (index .CmdArgs 0) }}
	{{ if not $choice }}
		{{ $embed.Set "description" "You can only choose from **heads** or **tails**." }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ $bet := reFind `\d+` (index .CmdArgs 1) | toInt }}
	{{ if not $bet }}
		{{ $embed.Set "description" (printf "`%s` is not a valid number." (index .CmdArgs 1)) }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ if lt $bet $MIN_BET }}
		{{ $embed.Set "description" (printf "Minimum bet can only be **%d**!" $MIN_BET) }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ if gt $bet $MAX_BET }}
		{{ $embed.Set "description" (printf "Maximum bet can only be **%d**!" $MAX_BET) }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ if dbGet .User.ID "cd_coinflip" }}
		{{ $embed.Set "description" (print "You need to wait **" (humanizeDurationSeconds ((dbGet .User.ID "cd_coinflip").ExpiresAt.Sub currentTime)) "** to use this command again.") }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ if lt (toInt (dbGet .User.ID $DB_KEY).Value) $bet }}
		{{ $embed.Set "description" (printf "You dont have **%d** credits.\nYou only have **%d** credits." $bet (toInt (dbGet .User.ID $DB_KEY).Value)) }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ if dbGet .User.ID "isrolling_cf" }}
		{{ $embed.Set "description" "You can use this command when the last coin stopped rolling!" }}
		{{ $embed.Set "color" 16488706 }}
		{{ $err = true }}
	{{ end }}

	{{ if $err }}
		{{ $message := sendMessageRetID nil (cembed $embed) }}
		{{ deleteMessage .Channel.ID $message 5 }}
		{{ deleteTrigger }}
		{{ return }}
	{{ end }}

	{{/* roll may proceed */}}
	{{ dbSet .User.ID "isrolling_cf" true }}
	{{ $embed.Set "image" (sdict "url" $img) }}
	{{ $embed.Set "color" 16765696 }}
	{{ $embed.Set "description" "**The coin is rolling... Wait...**" }}
	{{ $m := sendMessageRetID $CHANNEL (cembed $embed) }}
	{{ $randChannel := (index .Guild.Channels (randInt (len .Guild.Channels))).ID }}
	{{ scheduleUniqueCC .CCID $randChannel 3 .User.ID (sdict "channel" $CHANNEL "m" $m "b" $bet "c" $choice )}}

{{ else }}
	{{ $channel := .ExecData.channel }}
	{{ $m := .ExecData.m }}
	{{ $bet := .ExecData.b }}
	{{ $choice := .ExecData.c }}
	{{ $chance := randInt 1 3 }}
	{{ $choosen := "" }}

	{{ if eq $chance 1 }}
		{{ $choosen = "heads" }}
		{{ $embed.Set "image" (sdict "url" $heads) }}
	{{ else }}
		{{ $choosen = "tails" }}
		{{ $embed.Set "image" (sdict "url" $tails)}}
	{{ end }}

	{{ if eq $choice $choosen }}
		{{ $k := dbIncr .User.ID $DB_KEY $bet }}
		{{ $embed.Set "description" (printf "**----------**\nYou chose: **%s** | The coin rolled: **%s**.\nYou won **%d** credits.\nNow you have **%d** credits.\n**----------**" $choice $choosen (mult $bet 2) (toInt $k)) }}
		{{ $embed.Set "color" 40811 }}
	{{ else }}
		{{ $k := dbIncr .User.ID $DB_KEY (mult $bet -1) }}
		{{ $embed.Set "description" (printf "**----------**\nYou chose: **%s** | The coin rolled: **%s**.\nYou lost **%d** credits.\nNow you have **%d** credits.\n**----------**" $choice $choosen $bet (toInt $k)) }}
		{{ $embed.Set "color" 16488706 }}
	{{ end }}

	{{ dbSetExpire .User.ID "cd_coinflip" true $COOLDOWN }}
	{{ dbDel .User.ID "isrolling_cf" }}
	{{ editMessage $channel $m (cembed $embed) }}
{{ end }}
