{{/*
        Counting statistics
        
	See <https://yagpdb-cc.github.io/fun/counting-v2>
	
        Author: H1nr1 <https://github.com/H1nr1>
*/}}

{{/* Configurable Values */}}
{{ $LBLength := 10 }} {{/* How many members to show on leaderboard; MAX OF 100 */}}
{{/* End of configuration values */}}

{{/* No Touchy */}}
{{/* Initializing variables */}}
{{ $Current := sub (dbGet 0 "Next").Value 1 }}
{{ $LastUser := toInt (index (split (dbGet 0 "Last").Value " ") 0) }}
{{ $CCount := (dbGet .User.ID "CCount").Value }}
{{ $CCorrect := (dbGet .User.ID "CCorrect").Value }}
{{ $HighScore := dbGet 0 "CountHighScore" }}
	{{ $HighScoreValue := toInt (index (split $HighScore.Value " ") 0) }}
	{{ $HighScoreDate := formatTime $HighScore.UpdatedAt "01/02" }}
	{{ $HighScoreUser := toInt (index (split $HighScore.Value " ") 1) }}
{{ $UserID := 0 }}
{{ $SecondChance := toInt (dbGet 0 "CSecondChance").Value }}
{{ if eq $SecondChance 0 }}
	{{ $SecondChance = 1 }}
{{ else if ge $SecondChance 1 }}
	{{ $SecondChance = 0 }}
{{ end }}
{{ $Args := parseArgs 0 ""
	(carg "string" "Who") }}

{{ if not ($Args.IsSet 0) }} {{/* Server Stats */}}
	{{ sendMessage nil (cembed 
		"title" "**üî¢ Counting Statistics**"
		"description" (print "‚åö __Current Score:__ " $Current "\nüèÖ __High Score:__ " $HighScoreValue " on " $HighScoreDate " by " (userArg $HighScoreUser) "\n‚èÆÔ∏è __Last Counter:__ " (userArg $LastUser) "\nüíæ __Saves Remaining:__ " $SecondChance)
		"color" 30654
		"timestamp" currentTime) }}
	{{ deleteTrigger 3 }}
	{{ return }}

{{ else if (inFold (cslice "Me" "My" "0") ($Args.Get 0)) }} {{/* Triggering user's stats */}}
	{{ sendMessage nil (cembed
		"title" (print "**üî¢ " .User.Username "'s Counting Statistics**")
		"description" (print .User.Mention " has counted a __total__ of **" $CCount " times**\n" .User.Mention " has counted __correctly__ **" $CCorrect " times**\nThis makes " .User.Mention "'s __average__ **" (div (round (mult (div $CCorrect $CCount) 10000)) 100) "%**")
		"color" 30654
		"timestamp" currentTime) }}

{{ else if ($UserID = reFind `\d{17,19}` ($Args.Get 0)) }} {{/* User mentioned/ID */}}
	{{ if and (ne $UserID "0") (eq (dbCount (sdict "userID" (toInt64 $UserID) "pattern" "CCount")) 0) }} {{/* No stats for user */}}
		{{ sendMessage nil (cembed 
			"title" (print "No available stats")
			"description" (print (userArg $UserID) " has yet to count ‚òπÔ∏è\nMaybe give them a heads-up to come join?")) }}
	{{ else }} {{/* Mentioned user's stats */}}
		{{ $CCount = (dbGet (toInt64 $UserID) "CCount").Value }}
		{{ $CCorrect = (dbGet (toInt64 $UserID) "CCorrect").Value }}
		{{ sendMessage nil (cembed
			"title" (print "**üî¢ " (userArg ($UserID)) "'s Counting Statistics**")
			"description" (print "<@" $UserID "> has counted a __total__ of **" $CCount " times**\n<@" $UserID "> has counted __correctly__ **" $CCorrect " times**\nThis makes <@" $UserID ">'s __average__ **" (div (round (mult (div $CCorrect $CCount) 10000)) 100) "%**")
			"color" 30654
			"timestamp" currentTime) }}
	{{ end }}

{{ else if (inFold (cslice "Leaderboard" "LB") ($Args.Get 0)) }} {{/* Server correct leaderboard */}}
	{{ $Desc := "" }}
	{{ $Place := 1 }}
	{{ range (dbTopEntries "CCorrect" $LBLength 0) }}
		{{- $Desc = (joinStr "\n" $Desc (printf "#%-3d %4d - %-4s" $Place (toInt .Value) (userArg .UserID))) -}}
		{{- $Place = add $Place 1 -}}
	{{ end }}
	{{ sendMessage nil (cembed 
		"title" "**Counting Leaderboard**"
		"description" (print "```Pos    ‚úÖ  User\n" $Desc "```")
		"color" 30654) }}

{{ else }} {{/* Invalid syntax, gives syntax */}}
	{{ sendMessage nil (cembed
		"title" "Invalid Syntax"
		"description" "For server counting statistics: `-CStats`\nFor your statistics: `-CStats [\"Me\"/\"My\"/\"0\"]`\nFor another member's statistics: `-CStats [@/ID]`\nFor server leaderboard: `-CStats [\"Leaderboard\"/\"LB\"]`"
		"color" 16744192
		"timestamp" currentTime) }}
{{ end }}

{{ deleteTrigger 5 }}
